---
# tasks file for delpoy_nginx
  - name: NGINX | Install EPEL Repo packages from standard repo
    yum:
      name: epel-release
      state: present
    tags:
      - epel-package
      - packages

  - name: Put SELinux in permissive mode, logging actions that would be blocked.
    selinux:
      policy: targeted
      state: permissive
    tags:
     - SELinux

  - name: NGINX | Install NGINX package from EPEL Repo
    yum:
      name:
          - nginx
          - docker
          - docker-compose
      state: present
    notify:
      - restart nginx
    tags:
      - nginx-package
      - packages

  - name: NGINX | Create NGINX config file from template
    template:
      src: nginx.conf
      dest: /etc/nginx/nginx.conf
      mode: 0644
    notify:
      - reload nginx
    tags:
      - nginx-configuration
  - name: NGINX | Create create sites config
    copy:
      src: templates/dynamic_web.conf
      dest: /etc/nginx/conf.d/
  - name: NGINX | start services
    shell: |
        ln -s /etc/nginx/conf.d/dynamic_web.conf /etc/nginx/conf.d/default.conf
        systemctl enable --now nginx
        systemctl enable --now docker
  - name: create docker-compose.yml
    copy:
     src: templates/docker-compose.yml
     dest: ~/
  - name: start docker-compose
    command: docker-compose -f /root/docker-compose.yml up -d

  - name: wait services to load
    shell: |
        curl -s localhost:80 > /dev/null; while [ ! $? = 0 ]; do curl -s localhost:80 > /dev/null; done
        curl -s localhost:2368 > /dev/null; while [ ! $? = 0 ]; do curl -s localhost:2368 > /dev/null; done
        curl -s localhost:8153 > /dev/null; while [ ! $? = 0 ]; do curl -s localhost:8153 > /dev/null; done

  - shell: |
        ss -tlnp | grep docker-proxy | awk '{printf "%-30s%s\n",$4,$6}'
    register: ss_out
  - name: Display result msg
    ansible.builtin.debug:
     msg: "{{ ss_out.stdout.split('\n') }}"